opar <- par(no.readonly=TRUE),
with(mtcars,{
opar <- par(no.readonly=TRUE)
par(mfrow=c(2,2)),
with(mtcars,{
opar <- par(no.readonly=TRUE)
par(mfrow=c(2,2))
plot(wt,mpg,main="Scatterplot of wt vs. mpg")
plot(wt,disp,main="Scatterplot of wt vs. disp")
hist(wt,main="Histogram of wt")
boxplot(wt,main="Boxplot of wt")
par(opar)
})
with(mtcars,{
opar <- par(no.readonly=TRUE)
par(mfrow=c(3,1))
hist(wt)
hist(mpg)
hist(disp)
par(opar)
})
with(mtcars,{
layout(matrix(c(1,1,2,3)),2,2,byrow=TRUE)
hist(wt)
hist(mpg)
hist(disp)
})
with(mtcars,{
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE))
hist(wt)
hist(mpg)
hist(disp)
})
with(mtcars,{
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),
widths=c(3,1),heights=c(1,2))
hist(wt)
hist(mpg)
hist(disp)
})
help(layout)
q()
with(mtcars,{
opar <- par(no.readonly=TRUE)
plot(wt,mpg,
xlab="Miles Per Gallon",
ylab="Car Weight")
par()
.//
with(mtcars,{
par(fig=c(0,0.8,0,0.8))
plot(wt,mpg,
xlab="Miles Per Gallon",
ylab="Car Weight")
par(fig=c(0,0.8,0.55,1),new=TRUE)
boxplot(wt,horizontal=TRUE,axes=FALSE)
par(fig=c(0.65,1,0,0.8),new=TRUE)
boxplot(mpg,axes=FALSE)
mtext("Enhanced Scatterplot",side=3,outer=TRUE,line=-3)
par(opar)
})
manager <- c(1,2,3,4,5)
date <- c("10/24/08","10/28/08","10/1/08","10/12/08","5/1/09")
country <- c("US","US","UK","UK","UK")
gender <- c("M","F","F","M","F")
age <- c(32,45,25,39,99)
q1 <- c(5,3,3,3,2)
q2 <- c(4,5,5,3,2)
q3 <- c(5,2,5,4,1)
q4 <- c(5,5,5,NA,2)
q5 <- c(5,5,2,NA,1)
leadership <- data.frame(manager,date,country,gender,age,
q1,q2,q3,q4,q5,stringAsFactors=FALSE)
leadership
q()
leadership
mydata <- data.frame(x1=c(2,2,6,4),
x2=c(3,4,2,8))
mydata
mydata$sumx <- mydata$x1+mydata$x2
mydata
mydata$meanx <- (mydata$x1 +mydata$x2)/2
mydata
attach(mydata)
mydata$sumx <- x1+x2
mydata$meanx <- (x1+x2)/2
mydata
detach(mydata)
mydata <- transform(mydata,
sumx=x1+x2,
meanx= (x1+x2)/2)
mydata
leadership$age[leadership$age==99] <- NA
leadership
leadership$agecat[leadership$age>75] <- "Elder"
leadership$agecat[leadership$age>=55 &leadership$age<=75] <- "Middle Aged"
leadership$agecat[leadership$age<55] <- "Young"
leadership
leadership <- within(leadership,{
agecat <- NA
agecat[age>75] <-  "Elder"
agecat[age>=55 & age<=75] <- "Middle Aged"
agecat[age<55] <- "Young"
})
leadership
names(leadership)
names(leadership)[2] <- "testDate"
leadership
fix(leadership)
names(leadership)[6:10] <- c("item1","item2","item3","item4","item5")
fix(leadership)
install.packages("plyr")
library(plyr)
leadership <- rename(leadership,
c(manager="managerID",date="testDate"))
leadership <-  rename(leadership,
c(manager="managerID"))
leadership
is.na(leadership[6:10])
leadership
newdata <- na.omit(leadership)
newdata
mydates <- as.Date(c("2007-06-22","2004-02-13"))
strDates <- c("01/05/1965","08/16/1975")
dates <-as.Date(strDates,"%m/%d/%Y")
dates
mydates
myformat <- "%m/%d/%y"
leadership$date <- as.Date(leadership$date,myformat)
leadership <- rename(leadership,c(testDate="date"))
leadership
leadership$date <- as.Date(leadership$date,myformat)
leadership
date()
Sys.Date()
today <- Sys.Date()
format(today,format="%B %d %Y")
format(today,format="%A")
startdate <- as.Date("2004-02-13")
enddate <- as.Date("2011-01-22")
days <- enddate-startdate
days
today <- Sys.Date()
dob <- as.Date("1996-12-20")
today-dob
difftime(today,dob,units="weeks")
difftime(today,dob,units="years")
dates
strDates <- as.character(dates)
strDates
strDates <- as.Date(strDates)
strDates
a <-c(1,2,3)
a
is.numric(a)
is.numerix(a)
is.numeric(a)
is.vector(a)
a <- as.character(a)
a
is.numeric(a)
is.vector()a
is.vector(a)
is.character(a)
newdata <- leadership[order(leadership$age),]
newdata
attach(leadership)
newdata <- leadership[order(gender,age),]
detach(leadership)
newdata
attach(leadership)
newdata <- leadership[order(gender,-age),]
detach(leadership)
newdata
dataframeA
newdata <-leadership[,c(6:10)]
newdata
leadership <- rename(leadership,c(item1="q1",item2="q2",item3="q3",item4="q4",item5="q5"))
leadership
myvars <- c("q1","q2","q3","q4","q5")
newdata <- leadership[myvars]
newdata
myvars <- paste("q",1:5,sep="")
newdata <- leadership[myvars]
newdata
myvars <- names(leadership) %in %c("q3","q4")
myvars <- names(leadership) %in% c("q3","q4")
myvars
newdata <- leadership[!myvars]
newdata
newdata <- leadership[c(-8,-9)]
newdata
leadership$q3 <- leadership$q4 <- NULL
leadership
leadership <- data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5,stringAsFactors=FALSE)
leadership
leadership$age[leadership$age==99] <- NA
leadership <- within(leadership,{
agecat <- NA 
agecat[agecat>75] <- "Elder"
agecat[agecat>=55 & agecat<=75]
/
leadership <- within(leadership,{
agecat <- NA 
agecat[agecat>75] <- "Elder"
agecat[agecat>=55 & agecat<=75]
/
leadership <- within(leadership,{
agecat <- NA 
+ agecat[agecat>75] 
/
leadership <- within(leadership,{
agecat <- NA 
agecat[agecat>=55 & agecat<=75] <-"Middle Aged"
agecat[agecat<55] <- "Young"
})
leadership
leadership$agecat[leadership$age<55] <- "Young"
leadership
newdata <- leadership[1:3,]
newdata <- leadership[leadership$gender=="M" & leadership$age>30,]
attach(leadership)
newdata <- leadership[gender=="M" & age>30]
detach(leadership)
newdata
newdata <-leadership[1:3,] 
newdata
newdata <- leadership[leadership$gender=="M" &
leadership$age >30,]
newdata
leadership$date <- as.Date(leadership$date,"%m/%d/%y")
leadership
startdate <- as.Date("2009-01-01")
enddate <- as.Date("2009-10-31")
newdata <- leadership[which(leadership$date>=startdate
& leadership$date<=enddate),]
newdata
newdata <- subset(leadership,age>=35 | age<24,
select=c(q1,q2,q3,q4))
newdata
newdata <- subset(leadership,gender=="M" & age>25,
select=gender:q4)
newdata
mysample <- leadership[sample(1:nrow(leadership),3,replace=FALSE),]
mysample
install.packagaes("sqldf")
install.packages()
library(sqldf)
newdf <- sqldf("select * from mtcars where carb=1 order by mpg",
row.names=TRUE)
newdf
newdf(select avg(mpg) as avg_mpg,avg(disp) as avg_disp,gear
newdf <- sqldf("select avg(mpg) as avg_mpg,avg(disp) as avg_disp,gear
from mtcars where cyl in (4,6) group by gear")
newdf
q()
x <- c(1,2,3,4,5,6,7,8)
mean(x)
(1+2+3+4+5+6+7+8)/8
sd(x)
n <- length(x)
n
mean <- sum(x)/n
mean
css <- sum((x-mean)^2)
css
sdx <- sqrt(css/(n-1))
sdx
q()
help(pretty)
x <- pretty(c(-3,3),30)
y <- dnorm(x)
x
y
plot(x,y
type="1",
plot(x,y,
type="1",
xlab="Normal Deviate",
ylab="Density",
yaxs="i"
)
runif(5)
runif(5)
set.seed(1234)
runif(5)
runif(5)
set.seed(1234)
runif(5)
library(MASS)
options(digits=3)
set.seed(1234)
mean <- c(230.7,146.7,3.6)
sigma <- matrix(c(15360.8,6721.2,-47.1,
6721.2,4700.9,-16.5,-47.1,-16.5,0.3),nrow=3,ncol=3)
sigma
mydata <- mvrnorm(500,mean,sigma)
mydata
mydata <- as.data.frame(mydata)
names(mydata) <- c("y","x1","x2")
dim(mydata)
mydata
head(mydata,n=10)
x  <- pretty(c(-3,3),30)
x
a <- 5
sqrt(A)
sqrt(a)
b <- c(1.243,5.654,2.99)
round(b)
c <- matrix(runif(12),nrow=3)
c
log(c)
mean(c)
mydata <- matrix(rnorm(30),nrow=6)
mydata
apply(mydata,1,mean)
apply(mydata,2,mean)
apply(mydata,2,mean,trix=0.2)
options(digits=2)
Student <- c("John Davis","Angela Williams","Bullwinkle Moose",
  "David Jones","Janice Markhammer","Cheryl Cushing",
  "Reuven Ytzrhak","Greg Knox","Joel England","Mary Rayburn")
Student
Math <- c(502,600,412,
  358,495,512,410,625,573,522)
Math
Science <- c(95,99,80,82,75,85,80,95,89,86)
English <- c(25,22,18,15,20,28,15,30,27,18)
roster <- data.frame(Student,Math,Science,English,stringAsFactors=FALSE)
roster
z <- scale(roster[,2:4])
z
mean(Math)
mean(Science)
var(Math)
sd(Math)
sd(Science)
sd(English)
score <- apply(roster,1,mean)
score <- apply(z,1,mean)
score
as.data.frame(score)
roster <- cbind(roster,score)
roster
q()
roster
z <- scale(roster[,2:4])
z
score <- apply(z,1,mean)
score
roster <- cbind(roster,score)
roster
y <- quantile(score,c(.8,.6,.4,.2))
y
quantile(score)
roster$grade[score>=y[1]] <- "A"
roster&grade[score<y[1] & score>=y[2]] <- "B"
roster$grade[score<y[1] & score>=y[2]] <- "B"
roster&grade[score<y[2] & score>=y[3]] <- "C"
roster$grade[score<y[2] & score>=y[3]] <- "C"
roster$grade[score<y[3] & score>=y[4]] <- "D"
roster$grade[score<y[4]] <- "F"
roster
name <- strsplit((roster$Student)," ")
name <- strsplit((roster$Student)," ")
Student
name <- strsplit(roster$Student," ")
roster
roster$Student
strsplit((roster$Student)," ")
strsplit((roster$Student)," ")
Firstname <- c("Chery1","John","Joel","David","Greg",
"Janice","Bullwinkle","Mary","Angela","Reuven")
Lastname <- c("Cushing","Davis","England","Jones",
"Knox","Markhammer","Moose","Rayburn","Williams","Ytzrhak")
roster <- cbind(Firstname,Lastname,roster[,-1])
roster
roster <- roster[order[Lastname,Firstname],]
roster <- roster[order(Lastname,Firstname)]
roster <- roster[order(Lastname,Firstname),]
roster
q()
for (i in 1:10) print("Hello")
i <- 10
while(i>0) {print("Hello"); i <- i-1}
feelings <- c("sad","afraid")
for(i in feelings)
 print(
  switch(i,
    happy="I am glad you are happy",
    afraid="There is nothing to fear",
    sad="Cheer up",
    angry="Calm down now"
  )
)
mystats <- funtion(x,parametric=TRUE,print=FALSE){
mystats <- function(x,parametric=TRUE,print=FALSE) {
  if(parametric) {
    center <- mean(x); spread <- sd(x)
  }else{
    center <- median(x); spread <- mad(x)
  }
  if(print & parametric) {
    cat("Mean=",center,"\n","SD=",spread,"\n")
  }else if(print & !parametric){
    cat("Median=",center,"\n","MAD=",spread,"\n")
  }
  result <- list(center=center,spread=spread)
  return(result)
}
set.seed(1234)
x <- rnorm(500)
x
y <- mystats(x)
y
y <- mystats(x,parametric=FALSE,print=TRUE)
mydata <- function(type="long"){
  switch(type,
    long=format(Sys.time(),"%A %B %d %Y"),
    short=format(Sys.time(),"%m-%d-%y"),
    cat(type,"is not a recognized type\n")
  )
}
mydata("long")
mydata("short")
mydata()
mydata("medium")
cars <- mtcars[1:5,1:4]
cars
t(cars)
options(digits=3)
attach(mtcasr)
attach(mtcars)
aggdata <- aggregate(mtcars,by=list(cyl,gear),FUN=mean,na.rm=TRUE)
aggdata
install.packages("reshape2")
library(reshape)
library(reshape2)
md <- melt(mydata,id=c("ID","Time"))
md
ID <-c(1,1,2,2)
Time <- c(1,2,1,2)
X1 <- c(5,3,6,2)
X2 <- c(6,5,1,4)
mydata <- data.frame(ID,Time,X1,X2)
mydata
md <- melt(mydata,id=c("ID","Time"))
md
dcast(md,ID~variable,mean)
dcast(md,Time~variable,mean)
q()
library(randomForest)
install.packages("randomForest")
library(randomForest)
library(reader)
install.packages("reader")
q()
library(reader)
set.seed(0)
numTrain <- 10000
numTrees <- 25
train <- read_csv("train.csv")
library(readr)
install.packages("readr")
library(readr)
train <- read_csv("train.csv")
q()
test <- read_csv("test.csv")
test
rows <- sample(1:nrow(train),numTrain)
labels <- as.factor(train[rows,1])
rows
labels <- as.factor(train[rows,1])
labels
train[rows,1]
rows
labels <- as.factor(train[rows,1])
train[rows,1]
labels <- train[rows,1]
train1 <- train[rows,-1]
rf <- randomForest(train,labels,xtest=test,ntree=numTrees)
sure
yes
q()
customer <- read.csv("customer.csv",header=T)
customer <- na.omit(customer[,c(1:11,16:40,42)]) 
customer
customer[1,]
customer$churn <- as.factor(customer$churn)
library(nnet);
library(mlbench); 
install.packages("mlbench")
 library(mlbench)
n=length(customer[,1])
n
customer[,1]
m <- length(customer[1,])
m
set.seed(1)
samp <- sample(1:n,n/2)
samp
b <- class.ind(customer$churn)#customer$churn
b
test.cl <- function(true,pred){true=max.col(true);cres=max.col(pred); table(true, cres)}
a <- nnet(customer[samp,-37], b[samp,], size = 2, rang = 0.1,decay = 5e-4, maxit = 1000)
test.cl(b[-samp,], predict(a, customer[-samp,-37]))
test.cl(b[samp,], predict(a, customer[samp,-37]))
a=nnet(customer[samp,-19], b[samp,], size = 15, rang = 0.1,decay = 5e-4, maxit = 1000)
test.cl(b[-samp,], predict(a, customer[-samp,-19]))
test.cl(b[samp,], predict(a, customer[samp,-19]))
q()
